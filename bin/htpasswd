#!/usr/bin/env node

const HTPASSWD = require('../index');
const yargs = require('yargs');
const {resolve} = require('path');
const prompt = require('prompt');
const schema = {
  add: {
    properties: {
      name: {
        type: 'string',
        pattern: /^[a-zA-Z\s\-]+$/,
        description: 'Enter your desired username',
        message: 'Name must be only letters, spaces, or dashes',
        required: true
      },
      password: {
        description: 'Enter your desired password',
        hidden: true,
        replace: '*',
        required: true
      }
    }
  },
  edit: {
    properties: {
      name: {
        type: 'string',
        pattern: /^[a-zA-Z\s\-]+$/,
        description: 'Enter the username you want to edit',
        message: 'Name must be only letters, spaces, or dashes',
        required: true
      },
      password: {
        description: 'Enter the new password',
        hidden: true,
        replace: '*',
        required: true
      }
    }
  },
  del: {
    properties: {
      name: {
        type: 'string',
        pattern: /^[a-zA-Z\s\-]+$/,
        description: 'Enter the username you want to delete',
        message: 'Name must be only letters, spaces, or dashes',
        required: true
      }
    }
  }
};
const cli = function(opts,action,...args){
  const htpasswd = new HTPASSWD(opts);
  if(htpasswd[action]) {
    htpasswd[action](...args);
  }
}
const promptStart = function(sc,cb){  
  if(schema[sc]){
    prompt.start();
    prompt.get(schema[sc], function (err, result) {
      if(err) throw new Error(err);
      cb(result)
    });
  }
}
const defaultOpts = function(ygs){
  return ygs.option('p', {
      alias: 'path',
      description: "Abosulute path to save the htpasswd. Defaults to ~/.htpasswd",
      default: resolve(process.env.HOME,'.htpasswd')
  }).option('e', {
      alias: 'encryption',
      description: 'The encryption to use',
      choices: [ 'bcrypt', 'sha1', 'md5', 'crypt', 'plain' ],
      default: 'bcrypt'
  })
}
const argv = yargs.command('add', 'add a new account to htpasswd list',defaultOpts,({path,encryption}) => {
  promptStart('add', ({name,password}) => {
    cli({path,encryption},'add',name,password);
  })
})
.command('edit', 'edit a user with a new password',defaultOpts,({path,encryption}) => {
  promptStart('edit', ({name,password}) => {
    cli({path,encryption},'edit',name,password);
  })
})
.command('delete', 'delete a user',defaultOpts,({path,encryption}) => {
  promptStart('delete', ({name,password}) => {
    cli({path,encryption},'delete',name);
  })
})
.command('view', 'view all the list of users and passwords',defaultOpts,({path,encryption}) => {
    cli({path,encryption},'view');
})
.demandCommand(1, 'What command do you want to execute?')
.showHelpOnFail(false, 'Specify --help for available options')
.help('help')
.strict()
.argv;

